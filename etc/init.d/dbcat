#! /bin/sh -e
### BEGIN INIT INFO
# Provides:          DBCat
# Required-Start:    $network $remote_fs
# Required-Stop:     $network $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Database catalogue with filtering
### END INIT INFO

. /lib/lsb/init-functions

APP_NAME="dbcat"
SITE_PATH=/usr/share
RUNFILES_PATH=/var/run/
HOST=127.0.0.1
PORT_START=3033
PYTHON=python3
RUN_AS=dbcat

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DESC="Django FastCGI"
NAME=$0
SCRIPTNAME=/etc/init.d/$NAME

if [ -f /var/lib/$RUN_AS/bin/activate ]
then
    . /var/lib/$RUN_AS/bin/activate
else
    echo 'Can not open '/var/lib/$RUN_AS/bin/activate
    echo 'No python virtual env in '/var/lib/$RUN_AS/
fi

#
#       Function that starts the daemon/service.
#
d_start()
{
    # Starting all Django FastCGI processes
    echo -n ", $APP_NAME"
    if test -f $RUNFILES_PATH/$APP_NAME.pid && pgrep -F $RUNFILES_PATH/$APP_NAME.pid >/dev/null 2>&1 ; then
        echo -n " already running"
    else
        /var/lib/$RUN_AS/bin/gunicorn \
            --user $RUN_AS --group $RUN_AS \
            --bind unix:/tmp/$APP_NAME.sock \
            --daemon \
            --pid $RUNFILES_PATH/$APP_NAME.pid \
            --access-logfile /var/log/$APP_NAME/access.log \
            --error-logfile /var/log/$APP_NAME/error.log \
            --log-level info \
            --timeout 10 \
            --workers 4 \
            --chdir $SITE_PATH/$APP_NAME \
            $APP_NAME.wsgi \
        > /var/log/$APP_NAME/$APP_NAME.log 2>&1
    fi
}
 
#
#       Function that stops the daemon/service.
#
d_stop() {
    # Killing all Django FastCGI processes running
    echo -n ", $APP_NAME"
    if [ -f $RUNFILES_PATH/$APP_NAME.pid ]; then
        pgrep -F $RUNFILES_PATH/$APP_NAME.pid >/dev/null 2>&1 && kill -s TERM `cat $RUNFILES_PATH/$APP_NAME.pid`
        rm $RUNFILES_PATH/$APP_NAME.pid
    fi
}
 
ACTION="$1"
case "$ACTION" in
    start)
        echo -n "Starting $DESC: $NAME"
        d_start
        echo "."
        ;;
 
    stop)
        echo -n "Stopping $DESC: $NAME"
        d_stop
        echo "."
        ;;
 
    restart|force-reload)
        echo -n "Restarting $DESC: $NAME"
        d_stop
        sleep 1
        d_start
        echo "."
        ;;
 
    *)
        echo "Usage: $NAME {start|stop|restart|force-reload}" >&2
        exit 3
        ;;
esac
 
exit 0